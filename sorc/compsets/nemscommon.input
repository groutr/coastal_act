
# Common variables used by many tests:

nems_vars={
    atm_model='none'
    atm_petlist_bounds="-1 -1"
    ocn_model='none'
    ocn_petlist_bounds="-1 -1"
    ice_model='none'
    ice_petlist_bounds="-1 -1"
    med_model='nems'
    med_petlist_bounds="-1 -1"
    med_atm_coupling_interval_sec='-1'
    med_ocn_coupling_interval_sec='-1'
}

common_vars={
    walltime=900 # default wallclock limit in seconds
    GEFS_ENSEMBLE=0
    GEN_ENSEMBLE=0
    WRITE_DOPOST='.false.'
    POST_GRIBVERSION='grib1'
    CONF="@[plat%PARMnems]"          # Configuration files (NEMS/tests)
}

########################################################################

# Common prep step at the top of all tests:

embed bash nems_regtest_prep(RUNDIR,modules,CNTL) [[[
        #rm -rf "$RUNDIR" -- i don't think this worked
        mkdir -p "$RUNDIR"
        if [[ @[RUN_MODE] == 'BASELINE' ]] ; then
            mkdir -p "$CNTL"
        fi
        cd @[RUNDIR]
        set +e
        source @[plat%SRCnems]/conf/module-setup.sh.inc
        module purge
        module use $( dirname $modules )
        module load $( basename $modules )
        export MPI_TYPE_DEPTH=20
        export ESMF_RUNTIME_COMPLIANCECHECK=OFF:depth=4

        # Set the stack limit as high as we can.
        set +e
        for try_limit in 20000 18000 12000 9000 6000 3000 1500 1000 800 ; do
            if [[ ! ( $( ulimit -s ) -gt $(( try_limit * 1000 )) ) ]] ; then
                ulimit -s $(( try_limit * 1000 ))
            else
                break
            fi
        done
]]]

########################################################################

# Old rt.sh build system.  Note that the $NEMS_VER must use $ not @ to
# ensure it is not quoted.  Any shell metacharacters, such as spaces,
# should be interpreted:

embed bash rt.sh_build(NEMS.x,modules.nems,ESMF_VER,
                       MACHINE_ID="@[plat%MACHINE_ID]",NEMS_VER)
[[[
        mkdir -p "@[plat%EXECrt]" "@[plat%INCrt]"
        rm -f "@[NEMS.x]" "@[modules.nems]"
        cd @[plat%SRCnems]
        ./configure @[ESMF_VER]_@[MACHINE_ID]
        cp -fp conf/modules.nems "@[modules.nems]"
        source "@[modules.nems]"
        module list
        gmake clean
        gmake $NEMS_VER J=-j2
        cp -fp ../exe/NEMS.x "@[NEMS.x]"
]]]

########################################################################

# NEMSAppBuilder build system.  Note $OPTS must use $ not @ since
# shell metacharacters should be expanded, especially spaces.

embed bash NEMSAppBuilder(NEMS.x,modules.nems,OPTS,md5sum)
[[[
        mkdir -p "@[plat%EXECrt]" "@[plat%INCrt]"
        rm -f "@[NEMS.x]" "@[modules.nems]"
        cd @[plat%HOMEnems]

        ulimit -s 200000 # workaround for bug in Theia "module" command

        # NOTE: Replace "rebuild" with "norebuild" to disable "gmake clean"
        ./NEMS/NEMSAppBuilder rebuild $OPTS

        cd @[plat%SRCnems]
        cp -fp ../exe/NEMS.x "@[NEMS.x]"
        cp -fp conf/modules.nems "@[modules.nems]"
        md5sum "@[NEMS.x]" > "@[md5sum]"
]]]
